##########################################################################################################
### Quality control, Transcriptome mapping and Quantification of sequenced dataset for bulkRNA-seq [220330-]
##########################################################################################################

## Sample info
# Mouse explant retina
# Control (shScramble) x3 and shNmnat1 x3
# Library prep by "XXXXXXXX"
# Adapter is "Nextera"

# Terminal ################################################################################################

## If you start with SRA files
## Split SRA files into fastq files ("--split-files" for paired end / "--gzip" for generation of gzip files)
# fastq-dump <SRA_file> --split-files --gzip
fastq-dump SRR11587762.1 --split-files --gzip

## Check quality score
fastqc -o fastqc_results SRR9867761_2.fastq SRR9867761_3.fastq

## Trim low quality seq and adapters
# trim_galore --paired --q 30 -o <output_dir> fastqc_trimmed <Seq1.fastq.gz> <Seq2.fastq.gz>
trim_galore --paired --q 30 -o fastqc_trimmed SRR11587762.1_1.fastq.gz SRR11587762.1_2.fastq.gz

  ## If you need to create kallisto inx file
  ## Kallisto index file generation
  # kallisto index -i kallisto_idx/GRCm38.p13.idx Mus_musculus.GRCm38.cdna.all.idx
  kallisto index -i GRCh38.p13.idx Mus_musculus.GRCm38.cdna.all.fa

## Quantification of gene expression
# kallisto quant -i <kallisto_idx> -o <output_dir> -b 100 <Seq1.fq.gz> <Seq2.fq.gz>
kallisto quant -i ../Mus_musculus.GRCm38.cdna.all.idx -o Kallisto_quant_result -b 100 shN1_2_R1.fastq-016.gz_val_1.fq.gz shN1_2_R2.fastq-018.gz_val_2.fq.gz

# R #########################################################################################################

# Package load
library("tximport", lib.loc="~/Library/r-miniconda/lib/R/library")

# Import "t2g.txt"
setwd("~/Desktop/bulk_RNAseq")
t2g <- read.table("t2g.txt")

# File names
kallisto_files <- file.path(list.files("~/Desktop/bulk_RNAseq/trimmed/Kallisto_quant_result", pattern = "abundance"))
names(kallisto_files) <- c("Ctrl_1", "Ctrl_2", "Ctrl_3", "shNm1_1", "shNm1_2", "shNm1_3")

kallisto_files

# Expression level of trancscripts
tx.exp <- tximport(kallisto_files, type="kallisto", txOut=TRUE)
head(tx.exp)

# Expression level of Genes
gene.exp <- summarizeToGene(tx.exp, t2g, countsFromAbundance = "scaledTPM")
head(gene.exp)

write.csv(gene.exp, "kallisto_exp.csv")






